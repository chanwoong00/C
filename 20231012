test.c 파일

#include <stdio.h>

int main() {
int a = 22, b = 33;
printf("%d\n" , add(a, b));
return 0;
}

add 파일

int add(int a, int b) {
  return(a+b);
}

int subtract(int a, int b) {
  return(a-b);
}
int multiply(int a, int b) {
  return(a*b);
}
int divide(int a, int b) {
  return(a/b);
}


1. Visual Studio 2022 실행 - 도구 - 명령줄 - 개발자 명령 프롬프트
2. notepad로 my.c와 math.c 파일을 만듭니다.
3. cl /c my.c math.c 명령을 실행하여 두 소스 파일을 컴파일하여 각각 my.obj와 math.obj를 생성합니다.
4. lib mymath.lib math.obj 명령어를 사용하여 mymath.lib 라이브러리 파일을 생성합니다.
5. link my.obj mymath.lib 명령어를 사용하여 my.obj와 mymath.lib를 연결하여 실행 파일 "my.exe"를 생성합니다.
6. my.exe를 실행하면 55가 출력됩니다.


소감
1.모듈화와 재사용성의 가치를 깨달았습니다. 코드를 모듈화하고 라이브러리로 구성하면 다른 프로젝트에서 이를 쉽게 재사용할 수 있으며, 유지보수가 용이해집니다.
2.컴파일 및 링킹 과정의 중요성을 깨달았습니다. 라이브러리 파일을 만들고 사용함으로써 컴파일 및 링킹이 어떻게 작동하는지 더 잘 이해했습니다.
3.라이브러리 관리와 버전 관리의 중요성을 깨달았습니다. 프로젝트가 커질수록 라이브러리의 효과적인 관리가 필수적임을 알게 되었습니다.
4.함수 인터페이스 설계에 대한 고려사항을 배웠습니다. 사용자와 함께 작동할 때 필요한 매개변수와 반환 값의 구조를 신중하게 설계해야 함을 깨달았습니다.
5.명령줄 도구를 활용하여 자동화 프로세스를 구축하는 방법을 익혔습니다. 이것은 대규모 프로젝트에서 특히 유용하며, 프로세스 자동화에 대한 이해를 향상시켰습니다.

이번 경험을 통해 더욱 C 언어를 이해할 수 있을 것 같습니다
